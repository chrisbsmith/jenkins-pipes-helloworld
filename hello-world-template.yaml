apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-java
  name: hello-world
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "hello-world", "namespace": "", "kind": "DeploymentConfig"}]'
    name: hello-world-pipeline
  spec:
    source:
      git:
        ref: master
        uri: https://github.com/chrisbsmith/jenkins-pipes-helloworld.git
      type: Git
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        jenkinsfilePath: Jenkinsfile
    output:
      pushSecret:
        name: dockerhub
      to:
        kind: DockerImage
        name: docker.io/chrismith/hello-world:openshift
    triggers:
      - github:
          secretReference:
            name: githubwebhook
        type: GitHub
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: hello-world
    name: hello-world
    namespace: jenkins
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      pushSecret:
        name: dockerhub
      to:
        kind: DockerImage
        name: docker.io/chrismith/hello-world:openshift
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy:
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secretReference:
          name: githubwebhook
      type: GitHub
    - generic:
        secret: z2tlPSAoFZtBiT-9a0NF
      type: Generic
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: hello-world
    labels:
      application: hello-world
  spec:
    replicas: 1
    selector:
      deploymentconfig: hello-world
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: hello-world
          deploymentconfig: hello-world
        name: hello-world
      spec:
        containers:
          - image: 'chrismith/hello-world:openshift'
            imagePullPolicy: Always
            name: hello-world
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hello-world
      application: hello-world
    name: hello-world
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: hello-world
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: hello-world
    name: hello-world
  spec:
    to:
      kind: Service
      name: hello-world
      weight: 100